{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://ad-survey/./assets/scripts/inc/utility.js","webpack://ad-survey/./assets/scripts/inc/manage.js","webpack://ad-survey/./assets/scripts/inc/miscellaneous.js","webpack://ad-survey/./assets/scripts/admin.js"],"sourcesContent":["/*\r\n    Description: ultility class\r\n    Author URI: adillice.com\r\n    Author: adillice\r\n    Version: 1.0.0\r\n*/\r\n\r\n// utility helper\r\nclass Utility{\r\n\r\n    // constructor\r\n    constructor(){\r\n        // nothing to do yet...\r\n    }\r\n\r\n    // turn form data to query string\r\n    queryStringData(formObj){\r\n\r\n        // copy to array\r\n        const data = [...formObj.entries()];\r\n\r\n        // return mapped query string\r\n        return data.map(value => `${encodeURIComponent(value[0])}=${encodeURIComponent(value[1])}`).join(\"&\");\r\n        \r\n    }\r\n\r\n    // do a post call\r\n    async post(obj = null){\r\n        \r\n        // make sure we have url and data\r\n        if(!obj || obj == null) return;\r\n\r\n        // get action\r\n        const action = obj.action,\r\n        \r\n        // get url\r\n        url = obj.url,\r\n        \r\n        // get data\r\n        data = obj.data,\r\n\r\n        // convert values to query string\r\n        query = (data) ? this.queryStringData(data) : null;\r\n\r\n        // make sure we have data\r\n        if(query == null) return;\r\n\r\n        //init XML request\r\n        const xhr = new XMLHttpRequest();\r\n\r\n        // make a promise - resolve:error\r\n        let promise = new Promise((res, err) =>{\r\n            \r\n            // init xhr\r\n            xhr.open(\"POST\", `${url}?action=${action}`, true);\r\n\r\n            // set header\r\n            xhr.setRequestHeader(\"Access-Control-Allow-Headers\", \"*\");\r\n            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\r\n\r\n            // check on state change\r\n            xhr.addEventListener(\"readystatechange\", function(){\r\n                \r\n                // request complete\r\n                if(this.readyState === XMLHttpRequest.DONE){\r\n\r\n                    // status 0-299 should be ok\r\n                    if(this.status < 300){\r\n                        \r\n                        //set response\r\n                        res(this.responseText);\r\n\r\n                    // somethings not right\r\n                    }else{\r\n\r\n                        // set error\r\n                        err(this.statusText)\r\n                    \r\n                    }\r\n\r\n                }\r\n\r\n            });\r\n\r\n            //send data\r\n            xhr.send(query);\r\n\r\n        });\r\n\r\n        //return promise\r\n        return promise;\r\n\r\n    }\r\n\r\n}\r\n\r\n// export\r\nexport default Utility;","/*\r\n    Description: AD survey admin manage page scripts\r\n    Author URI: adillice.com\r\n    Author: adillice\r\n    Version: 1.0.0\r\n*/\r\n\r\n// import utility\r\nimport Utility from \"./utility\";\r\n\r\n// manage class\r\nclass Manage extends Utility{\r\n\r\n    // constructor\r\n    constructor({\r\n        nonceID = \"ad-survey-manage-nonce\",\r\n        urlClass = \"adsurvery__manage__wrapper__url\",\r\n        ajaxAction = \"ad_survey_manage_delete\",\r\n        shortCodeBttnClass = \"--copy-bttn\",\r\n        deleteSurveyBttnClass = \"--delete-bttn\",\r\n        responseArea = \"--survey-response\",\r\n        loadingClass = \"--survey-loading\",\r\n        copiedClass = \"--survey-copied\",\r\n        errorClass = \"--survey-error\",\r\n    } = {}){\r\n\r\n        // inherit class\r\n        super();\r\n\r\n        // error msg when no \r\n        this.errorMsg = \"There are no more surveys left. Please re-import your survey questions and try again.\";\r\n\r\n        // admin url field  \r\n        this.url = document.querySelector(`.${urlClass}`);\r\n\r\n        // nonce field  \r\n        this.nonce = document.querySelector(`#${nonceID}`);\r\n\r\n        // delete button\r\n        this.deleteBttn = document.querySelectorAll(`.${deleteSurveyBttnClass}`);\r\n\r\n        // shortcode button\r\n        this.shortCodeBttn = document.querySelectorAll(`.${shortCodeBttnClass}`);\r\n\r\n        // ajax response area\r\n        this.response = document.querySelector(`.${responseArea}`);\r\n\r\n        // loading class\r\n        this.loading = loadingClass;\r\n\r\n        // copied class\r\n        this.copied = copiedClass;\r\n\r\n        // ajax action url\r\n        this.action = ajaxAction;\r\n\r\n        // error class\r\n        this.error = errorClass;\r\n\r\n        // timers\r\n        this.timers = [];\r\n\r\n        // delay time [seconds]\r\n        this.delay = 0.7;\r\n\r\n        // events\r\n        this.events();\r\n\r\n    }\r\n\r\n    // run all events\r\n    events(){\r\n\r\n        // clicked delete button\r\n        this.deleteBttn.forEach((bttn) => {bttn.addEventListener(\"touchstart\", this.deleted.bind(this))});\r\n        this.deleteBttn.forEach((bttn) => {bttn.addEventListener(\"click\", this.deleted.bind(this))});\r\n        \r\n        // clicked delete button\r\n        this.shortCodeBttn.forEach((bttn) => {bttn.addEventListener(\"touchstart\", this.shortcode.bind(this))});\r\n        this.shortCodeBttn.forEach((bttn) => {bttn.addEventListener(\"click\", this.shortcode.bind(this))});\r\n\r\n    }\r\n\r\n    // delete button event\r\n    deleted(e){\r\n        \r\n        // prevent default \r\n        e.preventDefault();\r\n\r\n        // get target\r\n        const target = e.target,\r\n\r\n        // get li row\r\n        li = target.parentNode.parentNode,\r\n\r\n        // init final output\r\n        output = {},\r\n\r\n        // create form obj\r\n        data = new FormData();\r\n\r\n        // update class\r\n        target.classList.add(this.loading);\r\n\r\n        // set admin action\r\n        output.action = this.action;\r\n        \r\n        // get admin ajax url\r\n        output.url = (this.url && this.url.value) ? this.url.value : null;\r\n\r\n        // update form data\r\n        data.append(\"survey\", (target && target.parentNode && target.parentNode.dataset.num) ? target.parentNode.dataset.num : null);\r\n        data.append(\"nonce\", (this.nonce && this.nonce.value) ? this.nonce.value : null);\r\n\r\n        // add form data to output\r\n        output.data = data;\r\n\r\n        // make ajax call\r\n        this.post(output).then((response) => {\r\n\r\n            // set results to response\r\n            const results = JSON.parse(response);\r\n\r\n            // SUCCESS\r\n            if(results.success && this.response){\r\n                \r\n                // remove row\r\n                this.removeSurveyRow(li);\r\n\r\n                // add response msg\r\n                this.displayMessage(results.success);\r\n\r\n            }\r\n\r\n            // ERROR\r\n            if(results.error){\r\n\r\n                // add response msg - [param[is error] = true]\r\n                this.displayMessage(results.error, true);\r\n\r\n            }\r\n\r\n            // update class\r\n            target.classList.remove(this.loading);\r\n\r\n        // error\r\n        },(error) => {\r\n\r\n            // simple console error msg\r\n            console.error(\"ERROR:\", error);\r\n            \r\n            // update class\r\n            target.classList.remove(this.loading);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    // shortcode button event\r\n    shortcode(e){\r\n        \r\n        // prevent default \r\n        e.preventDefault();\r\n\r\n        // get target\r\n        const target = e.target,\r\n\r\n        // get data \r\n        shortcode = `[${target.parentNode.dataset.num}]`;\r\n\r\n        // update class\r\n        target.classList.add(this.copied);\r\n\r\n        // remove icon\r\n        this.delayIconRemoval(target, this.copied);\r\n\r\n        // copy shortcode\r\n        this.copyShortCode(shortcode);\r\n\r\n    }\r\n\r\n    // copy shortcode \r\n    copyShortCode(copy = null){\r\n\r\n        // end case\r\n        if(copy == null) return;\r\n\r\n        // check if navigator is available\r\n        if(!navigator.clipboard){\r\n\r\n            // run backup option\r\n            this.legacyCopyText(copy);\r\n\r\n            // return\r\n            return;\r\n            \r\n        }\r\n\r\n        // copy text\r\n        navigator.clipboard.writeText(copy).then(function(){\r\n            \r\n            // display success msg in console\r\n            console.log(\"[Navigator] Copied shortcode to clipboard:\", copy);\r\n        \r\n        // ERROR\r\n        },function(error){\r\n            \r\n            // display error msg in console\r\n            console.error(\"[Navigator] Could not copy text:\", error);\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    // backup \r\n    legacyCopyText(copy){\r\n\r\n        // create text area\r\n        const block = document.createElement(\"textarea\").style.display = \"none\";\r\n\r\n        // set copy\r\n        block.value = copy;\r\n\r\n        // append to body \r\n        document.body.appendChild(block);\r\n\r\n        // focus\r\n        block.focus();\r\n\r\n        // select\r\n        block.select();\r\n\r\n        // try\r\n        try{\r\n            \r\n            // run exec command\r\n            const exeCmd = document.execCommand(\"copy\");\r\n\r\n            // display success msg\r\n            console.log(\"[Legacy] Copied shortcode to clipboard:\", copy);\r\n            \r\n        // catch error\r\n        }catch(error){\r\n            \r\n            // display errors in console\r\n            console.error(\"[Legacy] Could not copy shortcode to clipboard:\", error);\r\n\r\n        }\r\n\r\n        // remove created block\r\n        document.body.removeChild(block);\r\n\r\n    }\r\n\r\n    // remove specific survey from manage page\r\n    removeSurveyRow(li = null){\r\n\r\n        // end case\r\n        if(li === null) return;\r\n\r\n        // get ul element\r\n        const ul = li.parentNode;\r\n\r\n        // remove li element\r\n        li.remove();\r\n\r\n        // get ul wrapper element\r\n        const wrapper = ul.parentNode,\r\n\r\n        // get li count\r\n        liCount = ul.querySelectorAll(\"li\").length;\r\n\r\n        // check for LI count\r\n        if(liCount <= 0){\r\n\r\n            // remove empty ul tag\r\n            ul.remove();\r\n            \r\n            // create p tag\r\n            const p = document.createElement(\"p\");\r\n\r\n            // add error class\r\n            p.classList.add(this.error);\r\n\r\n            // add error copy\r\n            p.textContent = this.errorMsg;\r\n\r\n            // add p tag to wrapper\r\n            wrapper.appendChild(p);\r\n\r\n        };\r\n\r\n        // return\r\n        return;\r\n\r\n    }\r\n\r\n    // delay icon swap\r\n    delayIconRemoval(dom = null, swapClass = null){\r\n\r\n        // end case\r\n        if((dom == null)||(swapClass == null)) return;\r\n\r\n        // set this to self\r\n        const self = this;\r\n\r\n        // create ID\r\n        const id = Date.now().toString(36) + Math.random().toString(36).substring(2, 12).padStart(12, 0);\r\n\r\n        // set timer to var\r\n        self.timers[id] = setTimeout(function(){\r\n\r\n            // remove class\r\n            dom.classList.remove(swapClass);\r\n\r\n            // delete timer func in our array \r\n            if(self.timers[id]) delete self.timers[id];\r\n\r\n        // delay time\r\n        }, (self.delay * 1000));\r\n\r\n    }\r\n\r\n    // display message\r\n    displayMessage(copy = null, error = false){\r\n\r\n        // end case\r\n        if(copy === null) return;\r\n\r\n        // clear response area\r\n        this.response.replaceChildren();\r\n\r\n        // create div\r\n        const div = document.createElement(\"div\"),\r\n\r\n        // create p tag\r\n        p = document.createElement(\"p\");\r\n\r\n        // add popup classes\r\n        (!error) ? div.classList.add(\"notice\", \"notice-success\", \"is-dismissible\") : div.classList.add(\"notice\", \"notice-error\", \"is-dismissible\");\r\n\r\n        // add copy to p tag\r\n        p.textContent = copy;\r\n\r\n        // append p to div\r\n        div.appendChild(p)\r\n\r\n        // add to result/response DOM element\r\n        return this.response.appendChild(div);\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n// export\r\nexport default Manage;","/*\r\n    Description: AD survey admin miscellaneous class scripts\r\n    Author URI: adillice.com\r\n    Author: adillice\r\n    Version: 1.0.0\r\n*/\r\n\r\n// admin miscellaneous class\r\nclass Miscellaneous{\r\n\r\n    // constructor\r\n    constructor({\r\n        exportFormButton = \"adsurvery__export__wrapper__form__submit > input[type='submit']\",\r\n        importFormButton = \"adsurvery__import__wrapper__form__submit > input[type='submit']\",\r\n        loadingClass = \"--admin-survey-loading\",\r\n    } = {}){\r\n\r\n        // export bttn  \r\n        this.exportBttn = document.querySelector(`.${exportFormButton}`);\r\n\r\n        // import bttn  \r\n        this.importBttn = document.querySelector(`.${importFormButton}`);\r\n        \r\n        // loading class\r\n        this.loading = loadingClass;\r\n\r\n        // set timer\r\n        this.timer = null;\r\n\r\n        // delay time\r\n        this.delay = 1.9;\r\n\r\n        // events\r\n        this.events();\r\n\r\n    }\r\n\r\n    // run all events\r\n    events(){\r\n        \r\n        // clicked export button\r\n        if(this.exportBttn) this.exportBttn.addEventListener(\"touchstart\", this.exportProcess.bind(this));\r\n        if(this.exportBttn) this.exportBttn.addEventListener(\"click\", this.exportProcess.bind(this));\r\n        \r\n        // clicked import button\r\n        if(this.importBttn) this.importBttn.addEventListener(\"touchstart\", this.addLoadingIcon.bind(this));\r\n        if(this.importBttn) this.importBttn.addEventListener(\"click\", this.addLoadingIcon.bind(this));\r\n\r\n    }\r\n\r\n    // [FAKE] export process\r\n    exportProcess(e){\r\n\r\n        // get target\r\n        const target = e.target,\r\n\r\n        // set this\r\n        self = this;\r\n        \r\n        // add loading gif\r\n        target.classList.add(self.loading);\r\n\r\n        // clear timeout\r\n        clearTimeout(self.time);\r\n\r\n        // set time\r\n        self.time = setTimeout(function(){\r\n            \r\n            // remove loading gif\r\n            self.exportBttn.classList.remove(self.loading);\r\n\r\n        },(self.delay * 1000))\r\n\r\n    }\r\n\r\n    // add loadin\r\n    addLoadingIcon(e){\r\n        \r\n        // set target\r\n        const target = e.target;\r\n        \r\n        // add loading gif\r\n        target.classList.add(this.loading);\r\n\r\n    }\r\n\r\n}\r\n\r\n// export\r\nexport default Miscellaneous;","// /*\r\n//     Description: walk js entry point\r\n//     Author URI: adillice.com\r\n//     Author: adillice\r\n//     Version: 1.0.0\r\n// */\r\n\r\n// use strict\r\n'use strict';\r\n\r\n// import files\r\nimport \"../css/admin.scss\";\r\nimport Manage from \"../scripts/inc/manage\";\r\nimport Misc from \"../scripts/inc/miscellaneous\";\r\n\r\n// wait for page to load...\r\njQuery(function(){\r\n\r\n    // manage script\r\n    const manage = new Manage();\r\n\r\n    // misc script\r\n    const misc = new Misc();\r\n    \r\n});\r\n"],"names":["constructor","queryStringData","formObj","entries","map","value","encodeURIComponent","join","post","obj","action","url","data","query","this","xhr","XMLHttpRequest","Promise","res","err","open","setRequestHeader","addEventListener","readyState","DONE","status","responseText","statusText","send","Utility","nonceID","urlClass","ajaxAction","shortCodeBttnClass","deleteSurveyBttnClass","responseArea","loadingClass","copiedClass","errorClass","super","errorMsg","document","querySelector","nonce","deleteBttn","querySelectorAll","shortCodeBttn","response","loading","copied","error","timers","delay","events","forEach","bttn","deleted","bind","shortcode","e","preventDefault","target","li","parentNode","output","FormData","classList","add","append","dataset","num","then","results","JSON","parse","success","removeSurveyRow","displayMessage","remove","console","delayIconRemoval","copyShortCode","copy","navigator","clipboard","writeText","log","legacyCopyText","block","createElement","style","display","body","appendChild","focus","select","execCommand","removeChild","ul","wrapper","length","p","textContent","dom","swapClass","self","id","Date","now","toString","Math","random","substring","padStart","setTimeout","replaceChildren","div","exportFormButton","importFormButton","exportBttn","importBttn","timer","exportProcess","addLoadingIcon","clearTimeout","time","jQuery","Manage","Misc"],"sourceRoot":""}